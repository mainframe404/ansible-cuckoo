upstream _uwsgi_cuckoo_web {
    server unix:/run/uwsgi/app/cuckoo-web/socket;
}

server {
    listen *:443 ssl http2;
    ssl_certificate /etc/nginx/ssl/cuckoo.crt;
    ssl_certificate_key /etc/nginx/ssl/cuckoo.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    # Uncomment this next line if you are using a signed, trusted cert
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    root /usr/share/nginx/html;
    index index.html index.htm;
    client_max_body_size 101M;
 #   auth_basic "Login required";
 #   auth_basic_user_file /etc/nginx/htpasswd;
 #    proxy_buffering off;
    merge_slashes off;

   # Cuckoo Web Interface
          location / {
             client_max_body_size 1G;
             proxy_redirect off;
             proxy_buffering off;
             proxy_set_header X-Forwarded-Proto $scheme;
             uwsgi_pass  _uwsgi_cuckoo_web;
             include     uwsgi_params;
             include /etc/nginx/mime.types;
             proxy_buffers 8 24k;
             proxy_buffer_size 2k;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection $http_connection;

                     }
                     
           location /home/cuckoo/.cuckoo/storage/ {
 #          alias /opt/cuckoo/storage/analyses/;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
                 }
}

server {
    listen *:80;
    server_name ;
    return 301 https://$server_name$request_uri;
  #  proxy_buffering off;

}

server {
  listen 192.168.100.1:8080;

    root /home/cuckoo/vmshared;

     location / {
           try_files $uri $uri/ =404;
           autoindex on;
           autoindex_exact_size off;
           autoindex_localtime on;
     }
}
server {
    listen *:4343 ssl http2;
    ssl_certificate /etc/nginx/ssl/cuckoo.crt;
    ssl_certificate_key /etc/nginx/ssl/cuckoo.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
   # Uncomment this next line if you are using a signed, trusted cert
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    root /usr/share/nginx/html;
    index index.html index.htm;
    client_max_body_size 101M;
}
